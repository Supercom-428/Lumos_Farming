{"version":3,"sources":["views/Nft/market/Collection/Activity/index.tsx","views/Nft/market/components/MarketPageHeader.tsx","views/Nft/market/components/StatBox.tsx","views/Nft/market/components/BannerHeader/AvatarImage.tsx","views/Nft/market/components/MarketPageTitle.tsx","views/Nft/market/components/BaseSubMenu.tsx","components/AddressInputSelect/index.tsx","views/Nft/market/components/SearchBar.tsx","views/Nft/market/components/BannerHeader/BannerImage.tsx","views/Nft/market/components/BannerHeader/index.tsx","views/Nft/market/Collection/TopBar.tsx","views/Nft/market/Collection/LowestPriceStatBoxItem.tsx","views/Nft/market/Collection/Header.tsx"],"names":["Activity","collectionAddress","useParams","collection","useGetCollection","MarketPageHeader","props","background","useTheme","theme","isDark","StatBoxItem","title","stat","fontSize","color","textAlign","height","width","mx","fontWeight","StatBox","styled","Flex","colors","invertedContrast","cardBorder","radii","card","AvatarImage","div","attrs","alt","src","borderColor","MarketPageTitle","description","children","gridGap","alignItems","gridTemplateColumns","as","scale","mb","BaseSubMenu","SubMenuItems","ResultStatus","SubMenu","input","inputSecondary","default","isOpen","AddressLink","Text","initialState","isFetching","resultFound","NOT_VALID","value","defaultValidAddressHandler","Promise","resolve","AddressInputSelect","onValidAddress","onAddressClick","useState","state","setState","t","useTranslation","useEffect","isAddress","a","prevState","hasResults","FOUND","NOT_FOUND","validAddressHandler","position","placeholder","subject","toLowerCase","onChange","evt","newValue","target","style","zIndex","paddingRight","top","right","CircleLoader","onClick","px","SearchBar","history","useHistory","push","nftsBaseUrl","StyledBannerImage","mediaQueries","sm","md","BannerHeader","bannerImage","bannerAlt","avatar","flexDirection","pb","BannerImage","bottom","left","BackLink","RouterLink","primary","TopBar","justifyContent","to","LowestPriceStatBoxItem","lowestPrice","setLowestPrice","getLowestPriceInCollection","lowestCollectionPrice","fetchLowestPrice","formattedLowestPrice","toLocaleString","undefined","minimumFractionDigits","maximumFractionDigits","symbol","Header","totalSupply","numberTokensListed","totalVolumeBNB","banner","useLocation","pathname","hash","volume","parseFloat","itemsConfig","label","href","large","name","formatNumber","Number","address","Container","items","activeItem","mt"],"mappings":"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","file":"static/js/15.77c928dd.chunk.js","sourcesContent":["import React from 'react'\r\nimport { useParams } from 'react-router'\r\nimport { useGetCollection } from 'state/nftMarket/hooks'\r\nimport Header from '../Header'\r\nimport ActivityHistory from '../../ActivityHistory/ActivityHistory'\r\n\r\nconst Activity = () => {\r\n  const { collectionAddress } = useParams<{ collectionAddress: string }>()\r\n  const collection = useGetCollection(collectionAddress)\r\n\r\n  return (\r\n    <>\r\n      <Header collection={collection} />\r\n      <ActivityHistory collection={collection} />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Activity\r\n","import React from 'react'\r\nimport PageHeader, { PageHeaderProps } from 'components/PageHeader'\r\nimport useTheme from 'hooks/useTheme'\r\n\r\nconst MarketPageHeader: React.FC<PageHeaderProps> = (props) => {\r\n  const { theme } = useTheme()\r\n  const background = theme.isDark\r\n    ? 'linear-gradient(166.77deg, #3B4155 0%, #3A3045 100%)'\r\n    : 'linear-gradient(111.68deg, #f2ecf2 0%, #e8f2f6 100%)'\r\n  return <PageHeader background={background} {...props} />\r\n}\r\n\r\nexport default MarketPageHeader\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Box, BoxProps, Flex, Skeleton, Text } from '@pancakeswap/uikit'\r\n\r\nexport interface StatBoxItemProps extends BoxProps {\r\n  title: string\r\n  stat: string\r\n}\r\n\r\nexport const StatBoxItem: React.FC<StatBoxItemProps> = ({ title, stat, ...props }) => (\r\n  <Box {...props}>\r\n    <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"center\">\r\n      {title}\r\n    </Text>\r\n    {stat === null ? (\r\n      <Skeleton height=\"24px\" width=\"50%\" mx=\"auto\" />\r\n    ) : (\r\n      <Text fontWeight=\"600\" textAlign=\"center\">\r\n        {stat}\r\n      </Text>\r\n    )}\r\n  </Box>\r\n)\r\n\r\nconst StatBox = styled(Flex)`\r\n  align-items: center;\r\n  background: ${({ theme }) => theme.colors.invertedContrast};\r\n  border: 1px solid ${({ theme }) => theme.colors.cardBorder};\r\n  border-radius: ${({ theme }) => theme.radii.card};\r\n  justify-content: space-around;\r\n  padding: 8px;\r\n  width: 100%;\r\n`\r\n\r\nexport default StatBox\r\n","import styled from 'styled-components'\r\n\r\ninterface AvatarImageProps {\r\n  src: string\r\n  borderColor?: string\r\n  alt?: string\r\n}\r\n\r\nconst AvatarImage = styled.div.attrs<AvatarImageProps>(({ alt }) => ({\r\n  alt,\r\n}))<AvatarImageProps>`\r\n  background: url('${({ src }) => src}');\r\n  background-repeat: no-repeat;\r\n  background-size: cover;\r\n  border-radius: 50%;\r\n  position: relative;\r\n  width: 96px;\r\n  height: 96px;\r\n  border: 4px ${({ borderColor }) => borderColor || '#f2ecf2'} solid;\r\n\r\n  & > img {\r\n    border-radius: 50%;\r\n  }\r\n`\r\n\r\nexport default AvatarImage\r\n","import React, { ReactNode } from 'react'\r\nimport { Box, Grid, GridProps, Heading } from '@pancakeswap/uikit'\r\n\r\ninterface MarketPageTitleProps extends GridProps {\r\n  title: string\r\n  description?: ReactNode\r\n}\r\n\r\nconst MarketPageTitle: React.FC<MarketPageTitleProps> = ({ title, description, children, ...props }) => (\r\n  <Grid gridGap=\"16px\" alignItems=\"center\" gridTemplateColumns={['1fr', null, null, null, 'repeat(2, 1fr)']} {...props}>\r\n    <Box>\r\n      <Heading as=\"h1\" scale=\"xl\" color=\"secondary\" mb=\"16px\">\r\n        {title}\r\n      </Heading>\r\n      {description}\r\n    </Box>\r\n    <Box>{children}</Box>\r\n  </Grid>\r\n)\r\n\r\nexport default MarketPageTitle\r\n","import { SubMenuItems } from '@pancakeswap/uikit'\r\nimport styled from 'styled-components'\r\n\r\nconst BaseSubMenu = styled(SubMenuItems)`\r\n  background-color: transparent;\r\n  border-bottom: 1px ${({ theme }) => theme.colors.cardBorder} solid;\r\n`\r\n\r\nexport default BaseSubMenu\r\n","import React, { ChangeEvent, useState, useEffect } from 'react'\r\nimport { Box, BoxProps, Text, Input } from '@pancakeswap/uikit'\r\nimport styled from 'styled-components'\r\nimport { isAddress } from 'utils'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport CircleLoader from 'components/Loader/CircleLoader'\r\n\r\nenum ResultStatus {\r\n  NOT_VALID,\r\n  FOUND,\r\n  NOT_FOUND,\r\n}\r\n\r\ninterface AddressInputSelectProps extends BoxProps {\r\n  onValidAddress?: (value: string) => Promise<boolean>\r\n  onAddressClick: (value: string) => void\r\n}\r\n\r\nconst SubMenu = styled.div<{ isOpen: boolean }>`\r\n  align-items: center;\r\n  background: ${({ theme }) => theme.colors.input};\r\n  border: 1px solid ${({ theme }) => theme.colors.inputSecondary};\r\n  border-radius: 0 0 ${({ theme }) => theme.radii.default} ${({ theme }) => theme.radii.default};\r\n  left: 0;\r\n  padding-bottom: 8px;\r\n  padding-top: 16px;\r\n  position: absolute;\r\n  top: calc(100% - 12px);\r\n  transition: transform 0.15s, opacity 0.15s;\r\n  transform: scaleY(0);\r\n  transform-origin: top;\r\n  width: 100%;\r\n  z-index: 15;\r\n\r\n  ${({ isOpen }) =>\r\n    isOpen &&\r\n    `\r\n    height: auto;\r\n    opacity: 1;\r\n    transform: scaleY(1);\r\n  `}\r\n`\r\n\r\nconst AddressLink = styled(Text)`\r\n  cursor: pointer;\r\n  overflow-wrap: break-word;\r\n  font-weight: bold;\r\n  padding-left: 16px;\r\n  padding-right: 16px;\r\n`\r\n\r\nconst initialState = {\r\n  isFetching: false,\r\n  resultFound: ResultStatus.NOT_VALID,\r\n  value: '',\r\n}\r\n\r\nconst defaultValidAddressHandler = () => Promise.resolve(true)\r\n\r\nconst AddressInputSelect: React.FC<AddressInputSelectProps> = ({\r\n  onValidAddress = defaultValidAddressHandler,\r\n  onAddressClick,\r\n  ...props\r\n}) => {\r\n  const [state, setState] = useState(initialState)\r\n  const { t } = useTranslation()\r\n  const { isFetching, resultFound, value } = state\r\n\r\n  const handleChange = (evt: ChangeEvent<HTMLInputElement>) => {\r\n    const { value: newValue } = evt.target\r\n    setState((prevState) => ({\r\n      ...prevState,\r\n      value: newValue,\r\n    }))\r\n  }\r\n\r\n  const handleClick = () => {\r\n    setState(initialState)\r\n    onAddressClick(state.value)\r\n  }\r\n\r\n  // When we have a valid address fetch the data\r\n  useEffect(() => {\r\n    const isValidAddress = isAddress(value) !== false\r\n\r\n    const validAddressHandler = async () => {\r\n      try {\r\n        setState((prevState) => ({ ...prevState, isFetching: true }))\r\n        const hasResults = await onValidAddress(value)\r\n\r\n        setState((prevState) => ({\r\n          ...prevState,\r\n          isFetching: false,\r\n          resultFound: hasResults ? ResultStatus.FOUND : ResultStatus.NOT_FOUND,\r\n        }))\r\n      } catch {\r\n        setState((prevState) => ({ ...prevState, isFetching: false }))\r\n      }\r\n    }\r\n\r\n    if (isValidAddress) {\r\n      validAddressHandler()\r\n    } else {\r\n      setState((prevState) => ({ ...prevState, resultFound: ResultStatus.NOT_VALID }))\r\n    }\r\n  }, [value, onValidAddress, setState])\r\n\r\n  return (\r\n    <Box position=\"relative\" {...props}>\r\n      <Input\r\n        placeholder={t('Search %subject%', { subject: t('Address').toLowerCase() })}\r\n        value={state.value}\r\n        onChange={handleChange}\r\n        style={{ position: 'relative', zIndex: 16, paddingRight: '40px' }}\r\n      />\r\n      {isFetching && (\r\n        <Box position=\"absolute\" top=\"12px\" right=\"16px\" style={{ zIndex: 17 }}>\r\n          <CircleLoader />\r\n        </Box>\r\n      )}\r\n      <SubMenu isOpen={resultFound !== ResultStatus.NOT_VALID}>\r\n        {resultFound === ResultStatus.FOUND ? (\r\n          <AddressLink onClick={handleClick}>{state.value}</AddressLink>\r\n        ) : (\r\n          <Text px=\"16px\" fontWeight=\"bold\">\r\n            {t('No results found.')}\r\n          </Text>\r\n        )}\r\n      </SubMenu>\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default AddressInputSelect\r\n","import React from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport AddressInputSelect from 'components/AddressInputSelect'\r\nimport { nftsBaseUrl } from 'views/Nft/market/constants'\r\n\r\nconst SearchBar: React.FC = (props) => {\r\n  const history = useHistory()\r\n\r\n  const handleAddressClick = (value: string) => {\r\n    history.push(`${nftsBaseUrl}/profile/${value}`)\r\n  }\r\n\r\n  return <AddressInputSelect onAddressClick={handleAddressClick} {...props} />\r\n}\r\n\r\nexport default SearchBar\r\n","import styled from 'styled-components'\r\n\r\ninterface StyledBannerImageProps {\r\n  src: string\r\n  alt?: string\r\n}\r\n\r\nconst StyledBannerImage = styled.div.attrs<StyledBannerImageProps>(({ alt }) => ({\r\n  alt,\r\n}))<StyledBannerImageProps>`\r\n  ${({ src, theme }) => (src ? `background-image: url('${src}')` : `background-color: ${theme.colors.cardBorder}`)};\r\n  background-image: url('${({ src }) => src}');\r\n  background-size: cover;\r\n  background-position: center;\r\n  background-repeat: no-repeat;\r\n  flex: none;\r\n  width: 100%;\r\n  border-radius: 32px;\r\n  height: 123px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    height: 192px;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    height: 256px;\r\n  }\r\n`\r\n\r\nexport default StyledBannerImage\r\n","import React, { ReactNode } from 'react'\r\nimport { Flex, Box, FlexProps } from '@pancakeswap/uikit'\r\nimport BannerImage from './BannerImage'\r\n\r\ninterface BannerHeaderProps extends FlexProps {\r\n  bannerImage: string\r\n  bannerAlt?: string\r\n  avatar?: ReactNode\r\n}\r\n\r\nconst BannerHeader: React.FC<BannerHeaderProps> = ({ bannerImage, bannerAlt, avatar, children, ...props }) => {\r\n  return (\r\n    <Flex flexDirection=\"column\" mb=\"24px\" {...props}>\r\n      <Box position=\"relative\" pb=\"56px\">\r\n        <BannerImage src={bannerImage} alt={bannerAlt} />\r\n        <Box position=\"absolute\" bottom={0} left={-4}>\r\n          <Flex alignItems=\"flex-end\">\r\n            {avatar}\r\n            {children}\r\n          </Flex>\r\n        </Box>\r\n      </Box>\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default BannerHeader\r\n","import React from 'react'\r\nimport { Box, ChevronLeftIcon, Flex } from '@pancakeswap/uikit'\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport styled from 'styled-components'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { nftsBaseUrl } from 'views/Nft/market/constants'\r\nimport SearchBar from '../components/SearchBar'\r\n\r\nconst BackLink = styled(RouterLink)`\r\n  align-items: center;\r\n  color: ${({ theme }) => theme.colors.primary};\r\n  display: inline-flex;\r\n  font-weight: 600;\r\n`\r\n\r\nconst TopBar: React.FC = () => {\r\n  const { t } = useTranslation()\r\n\r\n  return (\r\n    <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"24px\">\r\n      <BackLink to={`${nftsBaseUrl}/collections`}>\r\n        <ChevronLeftIcon color=\"primary\" width=\"24px\" />\r\n        {t('All Collections')}\r\n      </BackLink>\r\n      <Box>\r\n        <SearchBar />\r\n      </Box>\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default TopBar\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { getLowestPriceInCollection } from 'state/nftMarket/helpers'\r\nimport { StatBoxItem, StatBoxItemProps } from '../components/StatBox'\r\n\r\ninterface LowestPriceStatBoxItemProps extends Omit<StatBoxItemProps, 'title' | 'stat'> {\r\n  collectionAddress: string\r\n}\r\n\r\nconst LowestPriceStatBoxItem: React.FC<LowestPriceStatBoxItemProps> = ({ collectionAddress, ...props }) => {\r\n  const [lowestPrice, setLowestPrice] = useState<number>(null)\r\n  const { t } = useTranslation()\r\n\r\n  useEffect(() => {\r\n    const fetchLowestPrice = async () => {\r\n      const lowestCollectionPrice = await getLowestPriceInCollection(collectionAddress)\r\n      setLowestPrice(lowestCollectionPrice)\r\n    }\r\n\r\n    fetchLowestPrice()\r\n  }, [collectionAddress, setLowestPrice])\r\n\r\n  const formattedLowestPrice =\r\n    lowestPrice === null\r\n      ? null\r\n      : lowestPrice.toLocaleString(undefined, {\r\n          minimumFractionDigits: 3,\r\n          maximumFractionDigits: 3,\r\n        })\r\n\r\n  return <StatBoxItem title={t('Lowest (%symbol%)', { symbol: 'BNB' })} stat={formattedLowestPrice} {...props} />\r\n}\r\n\r\nexport default LowestPriceStatBoxItem\r\n","import React from 'react'\r\nimport { useLocation, useParams } from 'react-router'\r\nimport { Text } from '@pancakeswap/uikit'\r\nimport { Collection } from 'state/nftMarket/types'\r\nimport { formatNumber } from 'utils/formatBalance'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport Container from 'components/Layout/Container'\r\nimport MarketPageHeader from '../components/MarketPageHeader'\r\nimport MarketPageTitle from '../components/MarketPageTitle'\r\nimport StatBox, { StatBoxItem } from '../components/StatBox'\r\nimport BannerHeader from '../components/BannerHeader'\r\nimport AvatarImage from '../components/BannerHeader/AvatarImage'\r\nimport BaseSubMenu from '../components/BaseSubMenu'\r\nimport { nftsBaseUrl } from '../constants'\r\nimport TopBar from './TopBar'\r\nimport LowestPriceStatBoxItem from './LowestPriceStatBoxItem'\r\n\r\ninterface HeaderProps {\r\n  collection: Collection\r\n}\r\n\r\nconst Header: React.FC<HeaderProps> = ({ collection }) => {\r\n  const { collectionAddress } = useParams<{ collectionAddress: string }>()\r\n  const { totalSupply, numberTokensListed, totalVolumeBNB, banner, avatar } = collection\r\n  const { t } = useTranslation()\r\n  const { pathname, hash } = useLocation()\r\n\r\n  const volume = totalVolumeBNB\r\n    ? parseFloat(totalVolumeBNB).toLocaleString(undefined, {\r\n        minimumFractionDigits: 3,\r\n        maximumFractionDigits: 3,\r\n      })\r\n    : '0'\r\n\r\n  const itemsConfig = [\r\n    {\r\n      label: t('Items'),\r\n      href: `${nftsBaseUrl}/collections/${collectionAddress}#items`,\r\n    },\r\n    {\r\n      label: t('Traits'),\r\n      href: `${nftsBaseUrl}/collections/${collectionAddress}#traits`,\r\n    },\r\n    {\r\n      label: t('Activity'),\r\n      href: `${nftsBaseUrl}/collections/${collectionAddress}#activity`,\r\n    },\r\n  ]\r\n\r\n  return (\r\n    <>\r\n      <MarketPageHeader>\r\n        <TopBar />\r\n        <BannerHeader bannerImage={banner.large} avatar={<AvatarImage src={avatar} />} />\r\n        <MarketPageTitle\r\n          title={collection.name}\r\n          description={collection.description ? <Text color=\"textSubtle\">{t(collection.description)}</Text> : null}\r\n        >\r\n          <StatBox>\r\n            <StatBoxItem title={t('Items')} stat={formatNumber(Number(totalSupply), 0, 0)} />\r\n            <StatBoxItem\r\n              title={t('Items listed')}\r\n              stat={numberTokensListed ? formatNumber(Number(numberTokensListed), 0, 0) : '0'}\r\n            />\r\n            <LowestPriceStatBoxItem collectionAddress={collection.address} />\r\n            <StatBoxItem title={t('Vol. (%symbol%)', { symbol: 'BNB' })} stat={volume} />\r\n          </StatBox>\r\n        </MarketPageTitle>\r\n      </MarketPageHeader>\r\n      <Container>\r\n        <BaseSubMenu items={itemsConfig} activeItem={`${pathname}${hash || '#items'}`} mt=\"24px\" mb=\"8px\" />\r\n      </Container>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Header\r\n"],"sourceRoot":""}