{"version":3,"sources":["../node_modules/lodash/capitalize.js","views/Nft/market/components/MarketPageHeader.tsx","views/Nft/market/components/StatBox.tsx","views/Nft/market/components/BannerHeader/AvatarImage.tsx","views/Nft/market/hooks/useGetCollectionDistribution.tsx","../node_modules/lodash/upperFirst.js","../node_modules/lodash/_hasUnicode.js","views/Nft/market/components/MarketPageTitle.tsx","views/Nft/market/components/BaseSubMenu.tsx","../node_modules/lodash/sum.js","components/AddressInputSelect/index.tsx","views/Nft/market/components/SearchBar.tsx","views/Nft/market/components/BannerHeader/BannerImage.tsx","views/Nft/market/components/BannerHeader/index.tsx","views/Nft/market/Collection/TopBar.tsx","views/Nft/market/Collection/LowestPriceStatBoxItem.tsx","views/Nft/market/Collection/Header.tsx","../node_modules/lodash/_createCaseFirst.js","../node_modules/lodash/_castSlice.js","../node_modules/lodash/_baseSlice.js","../node_modules/lodash/_stringToArray.js","../node_modules/lodash/_asciiToArray.js","../node_modules/lodash/_unicodeToArray.js","../node_modules/lodash/_baseSum.js"],"names":["toString","require","upperFirst","module","exports","string","toLowerCase","MarketPageHeader","props","background","useTheme","theme","isDark","StatBoxItem","title","stat","fontSize","color","textAlign","height","width","mx","fontWeight","StatBox","styled","Flex","colors","invertedContrast","cardBorder","radii","card","AvatarImage","div","attrs","alt","src","borderColor","useGetCollectionDistributionPB","useState","isFetching","total","data","state","setState","useEffect","a","prevState","getNftsFromCollectionApi","pancakeBunniesAddress","apiResponse","tokenIds","Object","keys","attributesDistribution","totalCountCall","address","getPancakeRabbitsAddress","name","bunnyCountCalls","map","tokenId","params","bunnyContractCalls","concat","multicallv2","pancakeRabbitsAbi","response","tokenListResponse","slice","reduce","obj","tokenCount","index","toNumber","sum","values","entries","tokenData","fetchTokens","useGetCollectionDistribution","collectionAddress","getCollectionDistributionApi","createCaseFirst","reHasUnicode","RegExp","test","MarketPageTitle","description","children","gridGap","alignItems","gridTemplateColumns","as","scale","mb","BaseSubMenu","SubMenuItems","baseSum","identity","array","length","ResultStatus","SubMenu","input","inputSecondary","default","isOpen","AddressLink","Text","initialState","resultFound","NOT_VALID","value","defaultValidAddressHandler","Promise","resolve","AddressInputSelect","onValidAddress","onAddressClick","t","useTranslation","isAddress","hasResults","FOUND","NOT_FOUND","validAddressHandler","position","placeholder","subject","onChange","evt","newValue","target","style","zIndex","paddingRight","top","right","CircleLoader","onClick","px","SearchBar","history","useHistory","push","nftsBaseUrl","StyledBannerImage","mediaQueries","sm","md","BannerHeader","bannerImage","bannerAlt","avatar","flexDirection","pb","BannerImage","bottom","left","BackLink","RouterLink","primary","TopBar","justifyContent","to","LowestPriceStatBoxItem","lowestPrice","setLowestPrice","getLowestPriceInCollection","lowestCollectionPrice","fetchLowestPrice","formattedLowestPrice","toLocaleString","undefined","minimumFractionDigits","maximumFractionDigits","symbol","Header","collection","useParams","totalSupply","numberTokensListed","totalVolumeBNB","banner","useLocation","pathname","hash","volume","parseFloat","itemsConfig","label","href","large","formatNumber","Number","Container","items","activeItem","mt","castSlice","hasUnicode","stringToArray","methodName","strSymbols","chr","charAt","trailing","join","baseSlice","start","end","result","Array","asciiToArray","unicodeToArray","split","rsAstral","rsCombo","rsFitz","rsNonAstral","rsRegional","rsSurrPair","reOptMod","rsOptVar","rsSeq","rsSymbol","reUnicode","match","iteratee","current"],"mappings":"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","file":"static/js/1.31f68e92.chunk.js","sourcesContent":["var toString = require('./toString'),\n    upperFirst = require('./upperFirst');\n\n/**\n * Converts the first character of `string` to upper case and the remaining\n * to lower case.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to capitalize.\n * @returns {string} Returns the capitalized string.\n * @example\n *\n * _.capitalize('FRED');\n * // => 'Fred'\n */\nfunction capitalize(string) {\n  return upperFirst(toString(string).toLowerCase());\n}\n\nmodule.exports = capitalize;\n","import React from 'react'\r\nimport PageHeader, { PageHeaderProps } from 'components/PageHeader'\r\nimport useTheme from 'hooks/useTheme'\r\n\r\nconst MarketPageHeader: React.FC<PageHeaderProps> = (props) => {\r\n  const { theme } = useTheme()\r\n  const background = theme.isDark\r\n    ? 'linear-gradient(166.77deg, #3B4155 0%, #3A3045 100%)'\r\n    : 'linear-gradient(111.68deg, #f2ecf2 0%, #e8f2f6 100%)'\r\n  return <PageHeader background={background} {...props} />\r\n}\r\n\r\nexport default MarketPageHeader\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Box, BoxProps, Flex, Skeleton, Text } from '@pancakeswap/uikit'\r\n\r\nexport interface StatBoxItemProps extends BoxProps {\r\n  title: string\r\n  stat: string\r\n}\r\n\r\nexport const StatBoxItem: React.FC<StatBoxItemProps> = ({ title, stat, ...props }) => (\r\n  <Box {...props}>\r\n    <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"center\">\r\n      {title}\r\n    </Text>\r\n    {stat === null ? (\r\n      <Skeleton height=\"24px\" width=\"50%\" mx=\"auto\" />\r\n    ) : (\r\n      <Text fontWeight=\"600\" textAlign=\"center\">\r\n        {stat}\r\n      </Text>\r\n    )}\r\n  </Box>\r\n)\r\n\r\nconst StatBox = styled(Flex)`\r\n  align-items: center;\r\n  background: ${({ theme }) => theme.colors.invertedContrast};\r\n  border: 1px solid ${({ theme }) => theme.colors.cardBorder};\r\n  border-radius: ${({ theme }) => theme.radii.card};\r\n  justify-content: space-around;\r\n  padding: 8px;\r\n  width: 100%;\r\n`\r\n\r\nexport default StatBox\r\n","import styled from 'styled-components'\r\n\r\ninterface AvatarImageProps {\r\n  src: string\r\n  borderColor?: string\r\n  alt?: string\r\n}\r\n\r\nconst AvatarImage = styled.div.attrs<AvatarImageProps>(({ alt }) => ({\r\n  alt,\r\n}))<AvatarImageProps>`\r\n  background: url('${({ src }) => src}');\r\n  background-repeat: no-repeat;\r\n  background-size: cover;\r\n  border-radius: 50%;\r\n  position: relative;\r\n  width: 96px;\r\n  height: 96px;\r\n  border: 4px ${({ borderColor }) => borderColor || '#f2ecf2'} solid;\r\n\r\n  & > img {\r\n    border-radius: 50%;\r\n  }\r\n`\r\n\r\nexport default AvatarImage\r\n","import { useEffect, useState } from 'react'\r\nimport { getCollectionDistributionApi, getNftsFromCollectionApi } from 'state/nftMarket/helpers'\r\nimport sum from 'lodash/sum'\r\nimport { ApiCollectionDistribution, ApiResponseCollectionTokens, ApiSingleTokenData } from 'state/nftMarket/types'\r\nimport { getPancakeRabbitsAddress } from 'utils/addressHelpers'\r\nimport { multicallv2 } from 'utils/multicall'\r\nimport pancakeRabbitsAbi from 'config/abi/pancakeRabbits.json'\r\nimport { pancakeBunniesAddress } from '../constants'\r\n\r\ninterface State {\r\n  isFetching: boolean\r\n  data: ApiCollectionDistribution['data']\r\n}\r\n\r\nconst useGetCollectionDistribution = (collectionAddress: string) => {\r\n  const [state, setState] = useState<State>({ isFetching: false, data: null })\r\n\r\n  useEffect(() => {\r\n    const fetchTokens = async () => {\r\n      setState((prevState) => ({ ...prevState, isFetching: true }))\r\n      const apiResponse = await getCollectionDistributionApi<ApiCollectionDistribution>(collectionAddress)\r\n      setState({\r\n        isFetching: false,\r\n        data: apiResponse.data,\r\n      })\r\n    }\r\n\r\n    fetchTokens()\r\n  }, [collectionAddress, setState])\r\n\r\n  return state\r\n}\r\n\r\ninterface StatePB {\r\n  isFetching: boolean\r\n  total: number\r\n  data: Record<string, ApiSingleTokenData & { tokenCount: number }>\r\n}\r\n\r\nexport const useGetCollectionDistributionPB = () => {\r\n  const [state, setState] = useState<StatePB>({ isFetching: false, total: 0, data: null })\r\n\r\n  useEffect(() => {\r\n    const fetchTokens = async () => {\r\n      setState((prevState) => ({ ...prevState, isFetching: true }))\r\n      let apiResponse: ApiResponseCollectionTokens\r\n      try {\r\n        apiResponse = await getNftsFromCollectionApi(pancakeBunniesAddress)\r\n      } catch (error) {\r\n        setState((prevState) => ({ ...prevState, isFetching: false }))\r\n        return\r\n      }\r\n      // Use on chain data to get most updated totalSupply and bunnyCount data. Nft Api Data not updated frequently.\r\n      const tokenIds = Object.keys(apiResponse.attributesDistribution)\r\n      const totalCountCall = {\r\n        address: getPancakeRabbitsAddress(),\r\n        name: 'totalSupply',\r\n      }\r\n      const bunnyCountCalls = tokenIds.map((tokenId) => ({\r\n        address: getPancakeRabbitsAddress(),\r\n        name: 'bunnyCount',\r\n        params: [tokenId],\r\n      }))\r\n      const bunnyContractCalls = [totalCountCall].concat(bunnyCountCalls)\r\n      try {\r\n        const response = await multicallv2(pancakeRabbitsAbi, bunnyContractCalls)\r\n        const tokenListResponse = response.slice(1).reduce((obj, tokenCount, index) => {\r\n          return {\r\n            ...obj,\r\n            [tokenIds[index]]: { ...apiResponse.data[index], tokenCount: tokenCount[0].toNumber() },\r\n          }\r\n        }, {})\r\n        setState({\r\n          isFetching: false,\r\n          total: response[0][0].toNumber(),\r\n          data: tokenListResponse,\r\n        })\r\n      } catch (error) {\r\n        // Use nft api data if on chain multicall fails\r\n        const total = sum(Object.values(apiResponse.attributesDistribution))\r\n        const tokenListResponse = Object.entries(apiResponse.data).reduce((obj, [tokenId, tokenData]) => {\r\n          return {\r\n            ...obj,\r\n            [tokenId]: { ...tokenData, tokenCount: apiResponse.attributesDistribution[tokenId] },\r\n          }\r\n        }, {})\r\n        setState({ isFetching: false, total, data: tokenListResponse })\r\n      }\r\n    }\r\n\r\n    fetchTokens()\r\n  }, [])\r\n\r\n  return state\r\n}\r\n\r\nexport default useGetCollectionDistribution\r\n","var createCaseFirst = require('./_createCaseFirst');\n\n/**\n * Converts the first character of `string` to upper case.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category String\n * @param {string} [string=''] The string to convert.\n * @returns {string} Returns the converted string.\n * @example\n *\n * _.upperFirst('fred');\n * // => 'Fred'\n *\n * _.upperFirst('FRED');\n * // => 'FRED'\n */\nvar upperFirst = createCaseFirst('toUpperCase');\n\nmodule.exports = upperFirst;\n","/** Used to compose unicode character classes. */\nvar rsAstralRange = '\\\\ud800-\\\\udfff',\n    rsComboMarksRange = '\\\\u0300-\\\\u036f',\n    reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n    rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n    rsVarRange = '\\\\ufe0e\\\\ufe0f';\n\n/** Used to compose unicode capture groups. */\nvar rsZWJ = '\\\\u200d';\n\n/** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */\nvar reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange  + rsComboRange + rsVarRange + ']');\n\n/**\n * Checks if `string` contains Unicode symbols.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {boolean} Returns `true` if a symbol is found, else `false`.\n */\nfunction hasUnicode(string) {\n  return reHasUnicode.test(string);\n}\n\nmodule.exports = hasUnicode;\n","import React, { ReactNode } from 'react'\r\nimport { Box, Grid, GridProps, Heading } from '@pancakeswap/uikit'\r\n\r\ninterface MarketPageTitleProps extends GridProps {\r\n  title: string\r\n  description?: ReactNode\r\n}\r\n\r\nconst MarketPageTitle: React.FC<MarketPageTitleProps> = ({ title, description, children, ...props }) => (\r\n  <Grid gridGap=\"16px\" alignItems=\"center\" gridTemplateColumns={['1fr', null, null, null, 'repeat(2, 1fr)']} {...props}>\r\n    <Box>\r\n      <Heading as=\"h1\" scale=\"xl\" color=\"secondary\" mb=\"16px\">\r\n        {title}\r\n      </Heading>\r\n      {description}\r\n    </Box>\r\n    <Box>{children}</Box>\r\n  </Grid>\r\n)\r\n\r\nexport default MarketPageTitle\r\n","import { SubMenuItems } from '@pancakeswap/uikit'\r\nimport styled from 'styled-components'\r\n\r\nconst BaseSubMenu = styled(SubMenuItems)`\r\n  background-color: transparent;\r\n  border-bottom: 1px ${({ theme }) => theme.colors.cardBorder} solid;\r\n`\r\n\r\nexport default BaseSubMenu\r\n","var baseSum = require('./_baseSum'),\n    identity = require('./identity');\n\n/**\n * Computes the sum of the values in `array`.\n *\n * @static\n * @memberOf _\n * @since 3.4.0\n * @category Math\n * @param {Array} array The array to iterate over.\n * @returns {number} Returns the sum.\n * @example\n *\n * _.sum([4, 2, 8, 6]);\n * // => 20\n */\nfunction sum(array) {\n  return (array && array.length)\n    ? baseSum(array, identity)\n    : 0;\n}\n\nmodule.exports = sum;\n","import React, { ChangeEvent, useState, useEffect } from 'react'\r\nimport { Box, BoxProps, Text, Input } from '@pancakeswap/uikit'\r\nimport styled from 'styled-components'\r\nimport { isAddress } from 'utils'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport CircleLoader from 'components/Loader/CircleLoader'\r\n\r\nenum ResultStatus {\r\n  NOT_VALID,\r\n  FOUND,\r\n  NOT_FOUND,\r\n}\r\n\r\ninterface AddressInputSelectProps extends BoxProps {\r\n  onValidAddress?: (value: string) => Promise<boolean>\r\n  onAddressClick: (value: string) => void\r\n}\r\n\r\nconst SubMenu = styled.div<{ isOpen: boolean }>`\r\n  align-items: center;\r\n  background: ${({ theme }) => theme.colors.input};\r\n  border: 1px solid ${({ theme }) => theme.colors.inputSecondary};\r\n  border-radius: 0 0 ${({ theme }) => theme.radii.default} ${({ theme }) => theme.radii.default};\r\n  left: 0;\r\n  padding-bottom: 8px;\r\n  padding-top: 16px;\r\n  position: absolute;\r\n  top: calc(100% - 12px);\r\n  transition: transform 0.15s, opacity 0.15s;\r\n  transform: scaleY(0);\r\n  transform-origin: top;\r\n  width: 100%;\r\n  z-index: 15;\r\n\r\n  ${({ isOpen }) =>\r\n    isOpen &&\r\n    `\r\n    height: auto;\r\n    opacity: 1;\r\n    transform: scaleY(1);\r\n  `}\r\n`\r\n\r\nconst AddressLink = styled(Text)`\r\n  cursor: pointer;\r\n  overflow-wrap: break-word;\r\n  font-weight: bold;\r\n  padding-left: 16px;\r\n  padding-right: 16px;\r\n`\r\n\r\nconst initialState = {\r\n  isFetching: false,\r\n  resultFound: ResultStatus.NOT_VALID,\r\n  value: '',\r\n}\r\n\r\nconst defaultValidAddressHandler = () => Promise.resolve(true)\r\n\r\nconst AddressInputSelect: React.FC<AddressInputSelectProps> = ({\r\n  onValidAddress = defaultValidAddressHandler,\r\n  onAddressClick,\r\n  ...props\r\n}) => {\r\n  const [state, setState] = useState(initialState)\r\n  const { t } = useTranslation()\r\n  const { isFetching, resultFound, value } = state\r\n\r\n  const handleChange = (evt: ChangeEvent<HTMLInputElement>) => {\r\n    const { value: newValue } = evt.target\r\n    setState((prevState) => ({\r\n      ...prevState,\r\n      value: newValue,\r\n    }))\r\n  }\r\n\r\n  const handleClick = () => {\r\n    setState(initialState)\r\n    onAddressClick(state.value)\r\n  }\r\n\r\n  // When we have a valid address fetch the data\r\n  useEffect(() => {\r\n    const isValidAddress = isAddress(value) !== false\r\n\r\n    const validAddressHandler = async () => {\r\n      try {\r\n        setState((prevState) => ({ ...prevState, isFetching: true }))\r\n        const hasResults = await onValidAddress(value)\r\n\r\n        setState((prevState) => ({\r\n          ...prevState,\r\n          isFetching: false,\r\n          resultFound: hasResults ? ResultStatus.FOUND : ResultStatus.NOT_FOUND,\r\n        }))\r\n      } catch {\r\n        setState((prevState) => ({ ...prevState, isFetching: false }))\r\n      }\r\n    }\r\n\r\n    if (isValidAddress) {\r\n      validAddressHandler()\r\n    } else {\r\n      setState((prevState) => ({ ...prevState, resultFound: ResultStatus.NOT_VALID }))\r\n    }\r\n  }, [value, onValidAddress, setState])\r\n\r\n  return (\r\n    <Box position=\"relative\" {...props}>\r\n      <Input\r\n        placeholder={t('Search %subject%', { subject: t('Address').toLowerCase() })}\r\n        value={state.value}\r\n        onChange={handleChange}\r\n        style={{ position: 'relative', zIndex: 16, paddingRight: '40px' }}\r\n      />\r\n      {isFetching && (\r\n        <Box position=\"absolute\" top=\"12px\" right=\"16px\" style={{ zIndex: 17 }}>\r\n          <CircleLoader />\r\n        </Box>\r\n      )}\r\n      <SubMenu isOpen={resultFound !== ResultStatus.NOT_VALID}>\r\n        {resultFound === ResultStatus.FOUND ? (\r\n          <AddressLink onClick={handleClick}>{state.value}</AddressLink>\r\n        ) : (\r\n          <Text px=\"16px\" fontWeight=\"bold\">\r\n            {t('No results found.')}\r\n          </Text>\r\n        )}\r\n      </SubMenu>\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default AddressInputSelect\r\n","import React from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport AddressInputSelect from 'components/AddressInputSelect'\r\nimport { nftsBaseUrl } from 'views/Nft/market/constants'\r\n\r\nconst SearchBar: React.FC = (props) => {\r\n  const history = useHistory()\r\n\r\n  const handleAddressClick = (value: string) => {\r\n    history.push(`${nftsBaseUrl}/profile/${value}`)\r\n  }\r\n\r\n  return <AddressInputSelect onAddressClick={handleAddressClick} {...props} />\r\n}\r\n\r\nexport default SearchBar\r\n","import styled from 'styled-components'\r\n\r\ninterface StyledBannerImageProps {\r\n  src: string\r\n  alt?: string\r\n}\r\n\r\nconst StyledBannerImage = styled.div.attrs<StyledBannerImageProps>(({ alt }) => ({\r\n  alt,\r\n}))<StyledBannerImageProps>`\r\n  ${({ src, theme }) => (src ? `background-image: url('${src}')` : `background-color: ${theme.colors.cardBorder}`)};\r\n  background-image: url('${({ src }) => src}');\r\n  background-size: cover;\r\n  background-position: center;\r\n  background-repeat: no-repeat;\r\n  flex: none;\r\n  width: 100%;\r\n  border-radius: 32px;\r\n  height: 123px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    height: 192px;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    height: 256px;\r\n  }\r\n`\r\n\r\nexport default StyledBannerImage\r\n","import React, { ReactNode } from 'react'\r\nimport { Flex, Box, FlexProps } from '@pancakeswap/uikit'\r\nimport BannerImage from './BannerImage'\r\n\r\ninterface BannerHeaderProps extends FlexProps {\r\n  bannerImage: string\r\n  bannerAlt?: string\r\n  avatar?: ReactNode\r\n}\r\n\r\nconst BannerHeader: React.FC<BannerHeaderProps> = ({ bannerImage, bannerAlt, avatar, children, ...props }) => {\r\n  return (\r\n    <Flex flexDirection=\"column\" mb=\"24px\" {...props}>\r\n      <Box position=\"relative\" pb=\"56px\">\r\n        <BannerImage src={bannerImage} alt={bannerAlt} />\r\n        <Box position=\"absolute\" bottom={0} left={-4}>\r\n          <Flex alignItems=\"flex-end\">\r\n            {avatar}\r\n            {children}\r\n          </Flex>\r\n        </Box>\r\n      </Box>\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default BannerHeader\r\n","import React from 'react'\r\nimport { Box, ChevronLeftIcon, Flex } from '@pancakeswap/uikit'\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport styled from 'styled-components'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { nftsBaseUrl } from 'views/Nft/market/constants'\r\nimport SearchBar from '../components/SearchBar'\r\n\r\nconst BackLink = styled(RouterLink)`\r\n  align-items: center;\r\n  color: ${({ theme }) => theme.colors.primary};\r\n  display: inline-flex;\r\n  font-weight: 600;\r\n`\r\n\r\nconst TopBar: React.FC = () => {\r\n  const { t } = useTranslation()\r\n\r\n  return (\r\n    <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"24px\">\r\n      <BackLink to={`${nftsBaseUrl}/collections`}>\r\n        <ChevronLeftIcon color=\"primary\" width=\"24px\" />\r\n        {t('All Collections')}\r\n      </BackLink>\r\n      <Box>\r\n        <SearchBar />\r\n      </Box>\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default TopBar\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { getLowestPriceInCollection } from 'state/nftMarket/helpers'\r\nimport { StatBoxItem, StatBoxItemProps } from '../components/StatBox'\r\n\r\ninterface LowestPriceStatBoxItemProps extends Omit<StatBoxItemProps, 'title' | 'stat'> {\r\n  collectionAddress: string\r\n}\r\n\r\nconst LowestPriceStatBoxItem: React.FC<LowestPriceStatBoxItemProps> = ({ collectionAddress, ...props }) => {\r\n  const [lowestPrice, setLowestPrice] = useState<number>(null)\r\n  const { t } = useTranslation()\r\n\r\n  useEffect(() => {\r\n    const fetchLowestPrice = async () => {\r\n      const lowestCollectionPrice = await getLowestPriceInCollection(collectionAddress)\r\n      setLowestPrice(lowestCollectionPrice)\r\n    }\r\n\r\n    fetchLowestPrice()\r\n  }, [collectionAddress, setLowestPrice])\r\n\r\n  const formattedLowestPrice =\r\n    lowestPrice === null\r\n      ? null\r\n      : lowestPrice.toLocaleString(undefined, {\r\n          minimumFractionDigits: 3,\r\n          maximumFractionDigits: 3,\r\n        })\r\n\r\n  return <StatBoxItem title={t('Lowest (%symbol%)', { symbol: 'BNB' })} stat={formattedLowestPrice} {...props} />\r\n}\r\n\r\nexport default LowestPriceStatBoxItem\r\n","import React from 'react'\r\nimport { useLocation, useParams } from 'react-router'\r\nimport { Text } from '@pancakeswap/uikit'\r\nimport { Collection } from 'state/nftMarket/types'\r\nimport { formatNumber } from 'utils/formatBalance'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport Container from 'components/Layout/Container'\r\nimport MarketPageHeader from '../components/MarketPageHeader'\r\nimport MarketPageTitle from '../components/MarketPageTitle'\r\nimport StatBox, { StatBoxItem } from '../components/StatBox'\r\nimport BannerHeader from '../components/BannerHeader'\r\nimport AvatarImage from '../components/BannerHeader/AvatarImage'\r\nimport BaseSubMenu from '../components/BaseSubMenu'\r\nimport { nftsBaseUrl } from '../constants'\r\nimport TopBar from './TopBar'\r\nimport LowestPriceStatBoxItem from './LowestPriceStatBoxItem'\r\n\r\ninterface HeaderProps {\r\n  collection: Collection\r\n}\r\n\r\nconst Header: React.FC<HeaderProps> = ({ collection }) => {\r\n  const { collectionAddress } = useParams<{ collectionAddress: string }>()\r\n  const { totalSupply, numberTokensListed, totalVolumeBNB, banner, avatar } = collection\r\n  const { t } = useTranslation()\r\n  const { pathname, hash } = useLocation()\r\n\r\n  const volume = totalVolumeBNB\r\n    ? parseFloat(totalVolumeBNB).toLocaleString(undefined, {\r\n        minimumFractionDigits: 3,\r\n        maximumFractionDigits: 3,\r\n      })\r\n    : '0'\r\n\r\n  const itemsConfig = [\r\n    {\r\n      label: t('Items'),\r\n      href: `${nftsBaseUrl}/collections/${collectionAddress}#items`,\r\n    },\r\n    {\r\n      label: t('Traits'),\r\n      href: `${nftsBaseUrl}/collections/${collectionAddress}#traits`,\r\n    },\r\n    {\r\n      label: t('Activity'),\r\n      href: `${nftsBaseUrl}/collections/${collectionAddress}#activity`,\r\n    },\r\n  ]\r\n\r\n  return (\r\n    <>\r\n      <MarketPageHeader>\r\n        <TopBar />\r\n        <BannerHeader bannerImage={banner.large} avatar={<AvatarImage src={avatar} />} />\r\n        <MarketPageTitle\r\n          title={collection.name}\r\n          description={collection.description ? <Text color=\"textSubtle\">{t(collection.description)}</Text> : null}\r\n        >\r\n          <StatBox>\r\n            <StatBoxItem title={t('Items')} stat={formatNumber(Number(totalSupply), 0, 0)} />\r\n            <StatBoxItem\r\n              title={t('Items listed')}\r\n              stat={numberTokensListed ? formatNumber(Number(numberTokensListed), 0, 0) : '0'}\r\n            />\r\n            <LowestPriceStatBoxItem collectionAddress={collection.address} />\r\n            <StatBoxItem title={t('Vol. (%symbol%)', { symbol: 'BNB' })} stat={volume} />\r\n          </StatBox>\r\n        </MarketPageTitle>\r\n      </MarketPageHeader>\r\n      <Container>\r\n        <BaseSubMenu items={itemsConfig} activeItem={`${pathname}${hash || '#items'}`} mt=\"24px\" mb=\"8px\" />\r\n      </Container>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","var castSlice = require('./_castSlice'),\n    hasUnicode = require('./_hasUnicode'),\n    stringToArray = require('./_stringToArray'),\n    toString = require('./toString');\n\n/**\n * Creates a function like `_.lowerFirst`.\n *\n * @private\n * @param {string} methodName The name of the `String` case method to use.\n * @returns {Function} Returns the new case function.\n */\nfunction createCaseFirst(methodName) {\n  return function(string) {\n    string = toString(string);\n\n    var strSymbols = hasUnicode(string)\n      ? stringToArray(string)\n      : undefined;\n\n    var chr = strSymbols\n      ? strSymbols[0]\n      : string.charAt(0);\n\n    var trailing = strSymbols\n      ? castSlice(strSymbols, 1).join('')\n      : string.slice(1);\n\n    return chr[methodName]() + trailing;\n  };\n}\n\nmodule.exports = createCaseFirst;\n","var baseSlice = require('./_baseSlice');\n\n/**\n * Casts `array` to a slice if it's needed.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {number} start The start position.\n * @param {number} [end=array.length] The end position.\n * @returns {Array} Returns the cast slice.\n */\nfunction castSlice(array, start, end) {\n  var length = array.length;\n  end = end === undefined ? length : end;\n  return (!start && end >= length) ? array : baseSlice(array, start, end);\n}\n\nmodule.exports = castSlice;\n","/**\n * The base implementation of `_.slice` without an iteratee call guard.\n *\n * @private\n * @param {Array} array The array to slice.\n * @param {number} [start=0] The start position.\n * @param {number} [end=array.length] The end position.\n * @returns {Array} Returns the slice of `array`.\n */\nfunction baseSlice(array, start, end) {\n  var index = -1,\n      length = array.length;\n\n  if (start < 0) {\n    start = -start > length ? 0 : (length + start);\n  }\n  end = end > length ? length : end;\n  if (end < 0) {\n    end += length;\n  }\n  length = start > end ? 0 : ((end - start) >>> 0);\n  start >>>= 0;\n\n  var result = Array(length);\n  while (++index < length) {\n    result[index] = array[index + start];\n  }\n  return result;\n}\n\nmodule.exports = baseSlice;\n","var asciiToArray = require('./_asciiToArray'),\n    hasUnicode = require('./_hasUnicode'),\n    unicodeToArray = require('./_unicodeToArray');\n\n/**\n * Converts `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction stringToArray(string) {\n  return hasUnicode(string)\n    ? unicodeToArray(string)\n    : asciiToArray(string);\n}\n\nmodule.exports = stringToArray;\n","/**\n * Converts an ASCII `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction asciiToArray(string) {\n  return string.split('');\n}\n\nmodule.exports = asciiToArray;\n","/** Used to compose unicode character classes. */\nvar rsAstralRange = '\\\\ud800-\\\\udfff',\n    rsComboMarksRange = '\\\\u0300-\\\\u036f',\n    reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n    rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n    rsVarRange = '\\\\ufe0e\\\\ufe0f';\n\n/** Used to compose unicode capture groups. */\nvar rsAstral = '[' + rsAstralRange + ']',\n    rsCombo = '[' + rsComboRange + ']',\n    rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]',\n    rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\n    rsNonAstral = '[^' + rsAstralRange + ']',\n    rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}',\n    rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]',\n    rsZWJ = '\\\\u200d';\n\n/** Used to compose unicode regexes. */\nvar reOptMod = rsModifier + '?',\n    rsOptVar = '[' + rsVarRange + ']?',\n    rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\n    rsSeq = rsOptVar + reOptMod + rsOptJoin,\n    rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';\n\n/** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */\nvar reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');\n\n/**\n * Converts a Unicode `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction unicodeToArray(string) {\n  return string.match(reUnicode) || [];\n}\n\nmodule.exports = unicodeToArray;\n","/**\n * The base implementation of `_.sum` and `_.sumBy` without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {number} Returns the sum.\n */\nfunction baseSum(array, iteratee) {\n  var result,\n      index = -1,\n      length = array.length;\n\n  while (++index < length) {\n    var current = iteratee(array[index]);\n    if (current !== undefined) {\n      result = result === undefined ? current : (result + current);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseSum;\n"],"sourceRoot":""}